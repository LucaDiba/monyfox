/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PProfileIdProfileImport } from './routes/p/$profileId/_profile'
import { Route as PProfileIdProfileIndexImport } from './routes/p/$profileId/_profile/index'
import { Route as PProfileIdProfileTransactionsIndexImport } from './routes/p/$profileId/_profile/transactions/index'
import { Route as PProfileIdProfileSettingsIndexImport } from './routes/p/$profileId/_profile/settings/index'
import { Route as PProfileIdProfileChartsIndexImport } from './routes/p/$profileId/_profile/charts/index'
import { Route as PProfileIdProfileAccountsIndexImport } from './routes/p/$profileId/_profile/accounts/index'
import { Route as PProfileIdProfileSettingsTransactionCategoriesImport } from './routes/p/$profileId/_profile/settings/transaction-categories'
import { Route as PProfileIdProfileSettingsSymbolsImport } from './routes/p/$profileId/_profile/settings/symbols'

// Create Virtual Routes

const PProfileIdImport = createFileRoute('/p/$profileId')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PProfileIdRoute = PProfileIdImport.update({
  id: '/p/$profileId',
  path: '/p/$profileId',
  getParentRoute: () => rootRoute,
} as any)

const PProfileIdProfileRoute = PProfileIdProfileImport.update({
  id: '/_profile',
  getParentRoute: () => PProfileIdRoute,
} as any)

const PProfileIdProfileIndexRoute = PProfileIdProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PProfileIdProfileRoute,
} as any)

const PProfileIdProfileTransactionsIndexRoute =
  PProfileIdProfileTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

const PProfileIdProfileSettingsIndexRoute =
  PProfileIdProfileSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

const PProfileIdProfileChartsIndexRoute =
  PProfileIdProfileChartsIndexImport.update({
    id: '/charts/',
    path: '/charts/',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

const PProfileIdProfileAccountsIndexRoute =
  PProfileIdProfileAccountsIndexImport.update({
    id: '/accounts/',
    path: '/accounts/',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

const PProfileIdProfileSettingsTransactionCategoriesRoute =
  PProfileIdProfileSettingsTransactionCategoriesImport.update({
    id: '/settings/transaction-categories',
    path: '/settings/transaction-categories',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

const PProfileIdProfileSettingsSymbolsRoute =
  PProfileIdProfileSettingsSymbolsImport.update({
    id: '/settings/symbols',
    path: '/settings/symbols',
    getParentRoute: () => PProfileIdProfileRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/p/$profileId': {
      id: '/p/$profileId'
      path: '/p/$profileId'
      fullPath: '/p/$profileId'
      preLoaderRoute: typeof PProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/p/$profileId/_profile': {
      id: '/p/$profileId/_profile'
      path: '/p/$profileId'
      fullPath: '/p/$profileId'
      preLoaderRoute: typeof PProfileIdProfileImport
      parentRoute: typeof PProfileIdRoute
    }
    '/p/$profileId/_profile/': {
      id: '/p/$profileId/_profile/'
      path: '/'
      fullPath: '/p/$profileId/'
      preLoaderRoute: typeof PProfileIdProfileIndexImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/settings/symbols': {
      id: '/p/$profileId/_profile/settings/symbols'
      path: '/settings/symbols'
      fullPath: '/p/$profileId/settings/symbols'
      preLoaderRoute: typeof PProfileIdProfileSettingsSymbolsImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/settings/transaction-categories': {
      id: '/p/$profileId/_profile/settings/transaction-categories'
      path: '/settings/transaction-categories'
      fullPath: '/p/$profileId/settings/transaction-categories'
      preLoaderRoute: typeof PProfileIdProfileSettingsTransactionCategoriesImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/accounts/': {
      id: '/p/$profileId/_profile/accounts/'
      path: '/accounts'
      fullPath: '/p/$profileId/accounts'
      preLoaderRoute: typeof PProfileIdProfileAccountsIndexImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/charts/': {
      id: '/p/$profileId/_profile/charts/'
      path: '/charts'
      fullPath: '/p/$profileId/charts'
      preLoaderRoute: typeof PProfileIdProfileChartsIndexImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/settings/': {
      id: '/p/$profileId/_profile/settings/'
      path: '/settings'
      fullPath: '/p/$profileId/settings'
      preLoaderRoute: typeof PProfileIdProfileSettingsIndexImport
      parentRoute: typeof PProfileIdProfileImport
    }
    '/p/$profileId/_profile/transactions/': {
      id: '/p/$profileId/_profile/transactions/'
      path: '/transactions'
      fullPath: '/p/$profileId/transactions'
      preLoaderRoute: typeof PProfileIdProfileTransactionsIndexImport
      parentRoute: typeof PProfileIdProfileImport
    }
  }
}

// Create and export the route tree

interface PProfileIdProfileRouteChildren {
  PProfileIdProfileIndexRoute: typeof PProfileIdProfileIndexRoute
  PProfileIdProfileSettingsSymbolsRoute: typeof PProfileIdProfileSettingsSymbolsRoute
  PProfileIdProfileSettingsTransactionCategoriesRoute: typeof PProfileIdProfileSettingsTransactionCategoriesRoute
  PProfileIdProfileAccountsIndexRoute: typeof PProfileIdProfileAccountsIndexRoute
  PProfileIdProfileChartsIndexRoute: typeof PProfileIdProfileChartsIndexRoute
  PProfileIdProfileSettingsIndexRoute: typeof PProfileIdProfileSettingsIndexRoute
  PProfileIdProfileTransactionsIndexRoute: typeof PProfileIdProfileTransactionsIndexRoute
}

const PProfileIdProfileRouteChildren: PProfileIdProfileRouteChildren = {
  PProfileIdProfileIndexRoute: PProfileIdProfileIndexRoute,
  PProfileIdProfileSettingsSymbolsRoute: PProfileIdProfileSettingsSymbolsRoute,
  PProfileIdProfileSettingsTransactionCategoriesRoute:
    PProfileIdProfileSettingsTransactionCategoriesRoute,
  PProfileIdProfileAccountsIndexRoute: PProfileIdProfileAccountsIndexRoute,
  PProfileIdProfileChartsIndexRoute: PProfileIdProfileChartsIndexRoute,
  PProfileIdProfileSettingsIndexRoute: PProfileIdProfileSettingsIndexRoute,
  PProfileIdProfileTransactionsIndexRoute:
    PProfileIdProfileTransactionsIndexRoute,
}

const PProfileIdProfileRouteWithChildren =
  PProfileIdProfileRoute._addFileChildren(PProfileIdProfileRouteChildren)

interface PProfileIdRouteChildren {
  PProfileIdProfileRoute: typeof PProfileIdProfileRouteWithChildren
}

const PProfileIdRouteChildren: PProfileIdRouteChildren = {
  PProfileIdProfileRoute: PProfileIdProfileRouteWithChildren,
}

const PProfileIdRouteWithChildren = PProfileIdRoute._addFileChildren(
  PProfileIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/p/$profileId': typeof PProfileIdProfileRouteWithChildren
  '/p/$profileId/': typeof PProfileIdProfileIndexRoute
  '/p/$profileId/settings/symbols': typeof PProfileIdProfileSettingsSymbolsRoute
  '/p/$profileId/settings/transaction-categories': typeof PProfileIdProfileSettingsTransactionCategoriesRoute
  '/p/$profileId/accounts': typeof PProfileIdProfileAccountsIndexRoute
  '/p/$profileId/charts': typeof PProfileIdProfileChartsIndexRoute
  '/p/$profileId/settings': typeof PProfileIdProfileSettingsIndexRoute
  '/p/$profileId/transactions': typeof PProfileIdProfileTransactionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/p/$profileId': typeof PProfileIdProfileIndexRoute
  '/p/$profileId/settings/symbols': typeof PProfileIdProfileSettingsSymbolsRoute
  '/p/$profileId/settings/transaction-categories': typeof PProfileIdProfileSettingsTransactionCategoriesRoute
  '/p/$profileId/accounts': typeof PProfileIdProfileAccountsIndexRoute
  '/p/$profileId/charts': typeof PProfileIdProfileChartsIndexRoute
  '/p/$profileId/settings': typeof PProfileIdProfileSettingsIndexRoute
  '/p/$profileId/transactions': typeof PProfileIdProfileTransactionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/p/$profileId': typeof PProfileIdRouteWithChildren
  '/p/$profileId/_profile': typeof PProfileIdProfileRouteWithChildren
  '/p/$profileId/_profile/': typeof PProfileIdProfileIndexRoute
  '/p/$profileId/_profile/settings/symbols': typeof PProfileIdProfileSettingsSymbolsRoute
  '/p/$profileId/_profile/settings/transaction-categories': typeof PProfileIdProfileSettingsTransactionCategoriesRoute
  '/p/$profileId/_profile/accounts/': typeof PProfileIdProfileAccountsIndexRoute
  '/p/$profileId/_profile/charts/': typeof PProfileIdProfileChartsIndexRoute
  '/p/$profileId/_profile/settings/': typeof PProfileIdProfileSettingsIndexRoute
  '/p/$profileId/_profile/transactions/': typeof PProfileIdProfileTransactionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/p/$profileId'
    | '/p/$profileId/'
    | '/p/$profileId/settings/symbols'
    | '/p/$profileId/settings/transaction-categories'
    | '/p/$profileId/accounts'
    | '/p/$profileId/charts'
    | '/p/$profileId/settings'
    | '/p/$profileId/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/p/$profileId'
    | '/p/$profileId/settings/symbols'
    | '/p/$profileId/settings/transaction-categories'
    | '/p/$profileId/accounts'
    | '/p/$profileId/charts'
    | '/p/$profileId/settings'
    | '/p/$profileId/transactions'
  id:
    | '__root__'
    | '/'
    | '/p/$profileId'
    | '/p/$profileId/_profile'
    | '/p/$profileId/_profile/'
    | '/p/$profileId/_profile/settings/symbols'
    | '/p/$profileId/_profile/settings/transaction-categories'
    | '/p/$profileId/_profile/accounts/'
    | '/p/$profileId/_profile/charts/'
    | '/p/$profileId/_profile/settings/'
    | '/p/$profileId/_profile/transactions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PProfileIdRoute: typeof PProfileIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PProfileIdRoute: PProfileIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/p/$profileId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/p/$profileId": {
      "filePath": "p/$profileId",
      "children": [
        "/p/$profileId/_profile"
      ]
    },
    "/p/$profileId/_profile": {
      "filePath": "p/$profileId/_profile.tsx",
      "parent": "/p/$profileId",
      "children": [
        "/p/$profileId/_profile/",
        "/p/$profileId/_profile/settings/symbols",
        "/p/$profileId/_profile/settings/transaction-categories",
        "/p/$profileId/_profile/accounts/",
        "/p/$profileId/_profile/charts/",
        "/p/$profileId/_profile/settings/",
        "/p/$profileId/_profile/transactions/"
      ]
    },
    "/p/$profileId/_profile/": {
      "filePath": "p/$profileId/_profile/index.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/settings/symbols": {
      "filePath": "p/$profileId/_profile/settings/symbols.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/settings/transaction-categories": {
      "filePath": "p/$profileId/_profile/settings/transaction-categories.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/accounts/": {
      "filePath": "p/$profileId/_profile/accounts/index.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/charts/": {
      "filePath": "p/$profileId/_profile/charts/index.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/settings/": {
      "filePath": "p/$profileId/_profile/settings/index.tsx",
      "parent": "/p/$profileId/_profile"
    },
    "/p/$profileId/_profile/transactions/": {
      "filePath": "p/$profileId/_profile/transactions/index.tsx",
      "parent": "/p/$profileId/_profile"
    }
  }
}
ROUTE_MANIFEST_END */
